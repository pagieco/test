openapi: '3.0.0'

info:
  title: service-mono
  version: 1.0.0
  contact:
    name: Pagie
    url: https://pagie.co
    email: hello@pagie.co

servers:
  - url: https://pagie.co/api

tags:
  - name: Asset
  - name: Asset Folder
  - name: Page
  - name: Collection
  - name: Form
  - name: Email
  - name: Profile
  - name: Automation
  - name: Domain
  - name: Workflow

paths:
  /assets:
    get:
      description: Get a list of assets
      tags:
        - Asset
      operationId: GetAssets
      responses:
        200:
          $ref: '#/components/responses/get-assets'
        204:
          description: No assets found
        403:
          $ref: '#/components/responses/status-403-response'
    post:
      description: Upload a new asset
      tags:
        - Asset
      operationId: UploadAsset
      responses:
        201:
          $ref: '#/components/responses/get-asset'
        403:
          $ref: '#/components/responses/status-403-response'
        422:
          $ref: '#/components/responses/status-422-response'

  /assets/{asset}:
    get:
      description: Get an asset
      tags:
        - Asset
      operationId: GetAsset
      parameters:
        - in: path
          name: asset
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-asset'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'
    patch:
      description: Update an asset
      tags:
        - Asset
      operationId: UpdateAsset
      parameters:
        - in: path
          name: asset
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-asset'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'
        422:
          $ref: '#/components/responses/status-422-response'
    delete:
      description: Delete an asset
      tags:
        - Asset
      operationId: DeleteAsset
      parameters:
        - in: path
          name: asset
          schema:
            type: integer
          required: true
      responses:
        204:
          description: Asset deleted
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /assets/{asset}/move:
    put:
      description: Move an asset
      tags:
        - Asset
      operationId: MoveAsset
      parameters:
        - in: path
          name: asset
          schema:
            type: integer
          required: true
      responses:
        201:
          $ref: '#/components/responses/status-201-response'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'
        422:
          $ref: '#/components/responses/status-422-response'

  /asset-folders:
    get:
      description: Get a list of asset folders
      tags:
        - Asset Folder
      operationId: GetAssetFolders
      responses:
        200:
          $ref: '#/components/responses/get-asset-folders'
        204:
          description: No asset folders found
        403:
          $ref: '#/components/responses/status-403-response'
    post:
      description: Create a new asset folder
      tags:
        - Asset Folder
      operationId: CreateAssetFolder
      responses:
        201:
          $ref: '#/components/responses/get-asset-folder'
        403:
          $ref: '#/components/responses/status-403-response'
        422:
          $ref: '#/components/responses/status-422-response'

  /asset-folders/{asset-folder}:
    get:
      description: Get an asset folder
      tags:
        - Asset Folder
      operationId: GetAssetFolder
      parameters:
        - in: path
          name: asset-folder
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-asset-folder'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'
    patch:
      description: Update an asset folder
      tags:
        - Asset Folder
      operationId: UpdateAssetFolder
      parameters:
        - in: path
          name: asset-folder
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-asset-folder'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'
        422:
          $ref: '#/components/responses/status-422-response'
    delete:
      description: Delete an asset folder
      tags:
        - Asset Folder
      operationId: DeleteAssetFolder
      parameters:
        - in: path
          name: asset-folder
          schema:
            type: integer
          required: true
      responses:
        204:
          description: Asset folder deleted
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /pages:
    get:
      description: Get a list of pages
      tags:
        - Page
      operationId: GetPages
      responses:
        200:
          $ref: '#/components/responses/get-pages'
        204:
          description: No pages found
        403:
          $ref: '#/components/responses/status-403-response'
    post:
      description: Create a new page
      tags:
        - Page
      operationId: CreatePage
      responses:
        201:
          $ref: '#/components/responses/get-page'
        403:
          $ref: '#/components/responses/status-403-response'
        422:
          $ref: '#/components/responses/status-422-response'

  /pages/{page}:
    get:
      description: Get a page
      tags:
        - Page
      operationId: GetPage
      parameters:
        - in: path
          name: page
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-page'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'
    patch:
      description: Update a page
      tags:
        - Page
      operationId: UpdatePage
      parameters:
        - in: path
          name: page
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-page'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'
        422:
          $ref: '#/components/responses/status-422-response'
    delete:
      description: Delete a page
      tags:
        - Page
      operationId: DeletePage
      parameters:
        - in: path
          name: page
          schema:
            type: integer
          required: true
      responses:
        204:
          description: Page deleted
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /collections:
    get:
      description: Get a list of collections
      tags:
        - Collection
      operationId: GetCollections
      responses:
        200:
          $ref: '#/components/responses/get-collections'
        204:
          description: No collections found
        403:
          $ref: '#/components/responses/status-403-response'

  /collections/{collection}:
    get:
      description: Get a collection
      tags:
        - Collection
      operationId: GetCollection
      parameters:
        - in: path
          name: collection
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-collection'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /forms:
    get:
      description: Get a list of forms
      tags:
        - Form
      operationId: GetForms
      responses:
        200:
          $ref: '#/components/responses/get-forms'
        204:
          description: No forms found
        403:
          $ref: '#/components/responses/status-403-response'

  /forms/{form}:
    get:
      description: Get a form
      tags:
        - Form
      operationId: GetForm
      parameters:
        - in: path
          name: form
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-form'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /forms/{form}/submissions:
    get:
      description: Get the submissions of a form
      tags:
        - Form
      operationId: GetFormSubmissions
      parameters:
        - in: path
          name: form
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-form-submissions'
        204:
          description: No form submissions found
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /form-submissions/{submission}:
    get:
      description: Get a form submission
      tags:
        - Form
      operationId: GetFormSubmission
      parameters:
        - in: path
          name: submission
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-form-submission'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /emails:
    get:
      description: Get a list of emails
      tags:
        - Email
      operationId: GetEmails
      responses:
        200:
          $ref: '#/components/responses/get-emails'
        204:
          description: No emails found
        403:
          $ref: '#/components/responses/status-403-response'

  /emails/{email}:
    get:
      description: Get an email
      tags:
        - Email
      operationId: GetEmail
      parameters:
        - in: path
          name: email
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-email'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /profiles:
    get:
      description: Get a list of profiles
      tags:
        - Profile
      operationId: GetProfiles
      responses:
        200:
          $ref: '#/components/responses/get-profiles'
        204:
          description: No profiles found
        403:
          $ref: '#/components/responses/status-403-response'

  /profiles/{profile}:
    get:
      description: Get a profile
      tags:
        - Profile
      operationId: GetProfile
      parameters:
        - in: path
          name: profile
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-profile'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'
    delete:
      description: Delete a profile
      tags:
        - Profile
      operationId: DeleteProfile
      parameters:
        - in: path
          name: profile
          schema:
            type: integer
          required: true
      responses:
        204:
          description: Profile deleted
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /profiles/{profile}/events:
    get:
      description: Get the events of a profile
      tags:
        - Profile
      operationId: GetProfileEvents
      parameters:
        - in: path
          name: profile
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-profile-events'
        204:
          description: No profile events found
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /profile-events/{event}:
    get:
      description: Get a profile event
      tags:
        - Profile
      operationId: GetProfileEvent
      parameters:
        - in: path
          name: event
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-profile-event'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /automations:
    get:
      description: Get a list of automations
      tags:
        - Automation
      operationId: GetAutomations
      responses:
        200:
          $ref: '#/components/responses/get-automations'
        204:
          description: No automations found
        403:
          $ref: '#/components/responses/status-403-response'

  /automations/{automation}:
    get:
      description: Get a automation
      tags:
        - Automation
      operationId: GetAutomation
      parameters:
        - in: path
          name: automation
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-automation'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /domains:
    get:
      description: Get a list of domains
      tags:
        - Domain
      operationId: GetDomains
      responses:
        200:
          $ref: '#/components/responses/get-domains'
        204:
          description: No domains found
        403:
          $ref: '#/components/responses/status-403-response'

  /domains/{domain}:
    get:
      description: Get a domain
      tags:
        - Domain
      operationId: GetDomain
      parameters:
        - in: path
          name: domain
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-domain'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

  /workflows:
    get:
      description: Get a list of workflows
      tags:
        - Workflow
      operationId: GetWorkflows
      responses:
        200:
          $ref: '#/components/responses/get-workflows'
        204:
          description: No workflows found
        403:
          $ref: '#/components/responses/status-403-response'

  /workflows/{workflow}:
    get:
      description: Get a workflow
      tags:
        - Workflow
      operationId: GetWorkflow
      parameters:
        - in: path
          name: workflow
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/get-workflow'
        403:
          $ref: '#/components/responses/status-403-response'
        404:
          $ref: '#/components/responses/status-404-response'

components:
  responses:
    get-assets:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/asset'

    get-asset:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/asset'

    get-asset-folders:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/asset-folder'

    get-asset-folder:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/asset-folder'

    get-pages:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/page'

    get-page:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/page'

    get-collections:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/collection'

    get-collection:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/collection'

    get-forms:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/form'

    get-form:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/form'

    get-form-submissions:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/form-submission'

    get-form-submission:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/form-submission'

    get-emails:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/email'

    get-email:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/email'

    get-profiles:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/profile'

    get-profile:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/profile'

    get-profile-events:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/profile-event'

    get-profile-event:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/profile-event'

    get-automations:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/automation'

    get-automation:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/automation'

    get-domains:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/domain'

    get-domain:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/domain'

    get-workflows:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/workflow'

    get-workflow:
      description: OK
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/workflow'

    status-201-response:
      description: Created
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                example:
                  Created

    status-302-response:
      description: Found
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                example:
                  Found

    status-400-response:
      description: Bad Request
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                example:
                  Bad Request

    status-401-response:
      description: Unauthorized
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                example:
                  Unauthorized

    status-403-response:
      description: Forbidden
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                example:
                  Forbidden

    status-404-response:
      description: Not Found
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                example:
                  Not Found

    status-406-response:
      description: Not Acceptable
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                example:
                  Not Acceptable

    status-422-response:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                example:
                  Unprocessable Entity
              errors:
                type: object

  schemas:
    asset:
      properties:
        id:
          type: integer
        hash:
          type: string
        hash_path:
          type: string
        filename:
          type: string
        original_filename:
          type: string
        description:
          type: string
        extension:
          type: string
        mimetype:
          type: string
        filesize:
          type: integer
        extra_attributes:
          type: object
          nullable: true
        path:
          type: string
        thumb_path:
          type: string
          nullable: true
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    asset-folder:
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    page:
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    collection:
      properties:
        id:
          type: integer
        name:
          type: string
        fields:
          type: object
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    form:
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    form-submission:
      properties:
        id:
          type: integer
        submission_data:
          type: object
          format: json
          example:
            first_name: John Doe
            email: john@doe.com
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    email:
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    profile:
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        address_1:
          type: string
          nullable: true
        address_2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
        tags:
          type: object
          nullable: true
        custom_fields:
          type: object
          nullable: true
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    profile-event:
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    automation:
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    domain:
      properties:
        id:
          type: integer
        domain_name:
          type: string
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'

    workflow:
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        steps:
          type: object
        transitions:
          type: object
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'
